#lang racket

(require "lang.rkt")
(require "data-type.rkt")
(require (lib "eopl.ss" "eopl"))

(define (eval-rexpr expr env)
  (cases right-expression expr
    [b-rexp (exp) (eval-rexpr exp)]
    [bool-rexp (bool) bool]
    [id-rexp (id) (apply-environment env id)]
    [else expr]))

(define (eval-rexprs env lexpr)
  (map eval-rexpr env lexpr))